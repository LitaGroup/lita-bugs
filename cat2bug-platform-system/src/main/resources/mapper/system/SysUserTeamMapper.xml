<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cat2bug.system.mapper.SysUserTeamMapper">
    
    <resultMap type="SysUserTeam" id="SysUserTeamResult">
        <result property="userTeamId"    column="user_team_id"    />
        <result property="userId"    column="user_id"    />
        <result property="teamId"    column="team_id"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="teamLock"    column="team_lock"    />
    </resultMap>

    <sql id="selectSysUserTeamVo">
        select user_team_id, user_id, team_id, create_by, create_time, update_by, update_time, team_lock from sys_user_team
    </sql>

    <select id="selectSysUserTeamList" parameterType="SysUserTeam" resultMap="SysUserTeamResult">
        <include refid="selectSysUserTeamVo"/>
        <where>  
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="teamId != null "> and team_id = #{teamId}</if>
            <if test="teamLock != null "> and team_lock = #{teamLock}</if>
        </where>
    </select>
    
    <select id="selectSysUserTeamByUserTeamId" parameterType="Long" resultMap="SysUserTeamResult">
        <include refid="selectSysUserTeamVo"/>
        where user_team_id = #{userTeamId}
    </select>
        
    <insert id="insertSysUserTeam" parameterType="SysUserTeam" useGeneratedKeys="true" keyProperty="userTeamId">
        insert into sys_user_team
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="teamId != null">team_id,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="teamLock != null">team_lock,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="teamId != null">#{teamId},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="teamLock != null">#{teamLock},</if>
         </trim>
    </insert>

    <update id="updateSysUserTeam" parameterType="SysUserTeam">
        update sys_user_team
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">user_id = #{userId},</if>
            <if test="teamId != null">team_id = #{teamId},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="teamLock != null">team_lock = #{teamLock},</if>
        </trim>
        where user_team_id = #{userTeamId}
    </update>

    <update id="updateSysUserTeamByTeamIdAndMemberId" parameterType="SysUserTeam">
        update sys_user_team
        <trim prefix="SET" suffixOverrides=",">
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="teamLock != null">team_lock = #{teamLock},</if>
        </trim>
        where team_id = #{teamId} and user_id = #{userId}
    </update>


    <delete id="deleteSysUserTeamByTeamIdAndMemberIdAndRoleIds" parameterType="Long">
        delete from sys_user_team_role
        where user_team_id in (select user_team_id from sys_user_team_role where team_id = #{teamId} and user_id = #{memberId})
        and role_id not in
            <foreach item="roleId" collection="roleIds" open="(" separator="," close=")">
                #{roleId}
            </foreach>
    </delete>

    <delete id="deleteSysUserTeamByUserTeamId" parameterType="Long">
        delete from sys_user_team where user_team_id = #{userTeamId}
    </delete>

    <delete id="deleteSysUserTeamByUserTeamIds" parameterType="String">
        delete from sys_user_team where user_team_id in
        <foreach item="userTeamId" collection="array" open="(" separator="," close=")">
            #{userTeamId}
        </foreach>
    </delete>
</mapper>