<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cat2bug.system.mapper.SysUserProjectMapper">
    
    <resultMap type="SysUserProject" id="SysUserProjectResult">
        <result property="userProjectId"    column="user_project_id"    />
        <result property="userId"    column="user_id"    />
        <result property="projectId"    column="project_id"    />
        <result property="collect"    column="collect"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="projectLock"    column="project_lock"    />
    </resultMap>

    <resultMap type="SysUser" id="SysUserResult">
        <id     property="userId"       column="user_id"      />
        <result property="deptId"       column="dept_id"      />
        <result property="userName"     column="user_name"    />
        <result property="nickName"     column="nick_name"    />
        <result property="email"        column="email"        />
        <result property="phoneNumber"  column="phonenumber"  />
        <result property="sex"          column="sex"          />
        <result property="avatar"       column="avatar"       />
        <result property="password"     column="password"     />
        <result property="status"       column="status"       />
        <result property="delFlag"      column="del_flag"     />
        <result property="loginIp"      column="login_ip"     />
        <result property="loginDate"    column="login_date"   />
        <result property="createBy"     column="create_by"    />
        <result property="createTime"   column="create_time"  />
        <result property="updateBy"     column="update_by"    />
        <result property="updateTime"   column="update_time"  />
        <result property="remark"       column="remark"       />
        <collection  property="roles"   javaType="java.util.List"  resultMap="RoleResult" />
    </resultMap>

    <resultMap id="RoleResult" type="SysRole">
        <id     property="roleId"       column="role_id"        />
        <result property="roleName"     column="role_name"      />
        <result property="roleKey"      column="role_key"       />
        <result property="roleSort"     column="role_sort"      />
        <result property="dataScope"    column="data_scope"     />
        <result property="status"       column="role_status"    />
    </resultMap>

    <sql id="selectSysUserProjectVo">
        select user_project_id, user_id, project_id, create_by, create_time, update_by, update_time, project_lock, collect from sys_user_project
    </sql>

    <select id="selectSysUserProjectList" parameterType="SysUserProject" resultMap="SysUserProjectResult">
        <include refid="selectSysUserProjectVo"/>
        <where>
            <if test="collect != null "> and collect = #{collect}</if>
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="projectId != null "> and project_id = #{projectId}</if>
            <if test="projectLock != null "> and project_lock = #{projectLock}</if>
        </where>
    </select>

    <select id="selectNotSysUserListByProjectId" resultMap="SysUserResult">
        SELECT
        l1.user_id,
        u.dept_id,
        u.user_name,
        u.nick_name,
        u.email,
        u.avatar,
        u.phonenumber,
        u.PASSWORD,
        u.sex,
        u.STATUS,
        u.del_flag,
        u.login_ip,
        u.login_date,
        u.create_by,
        u.create_time,
        u.remark
        FROM
        ( SELECT ut.user_id, p.project_id FROM sys_project p, sys_user_team ut WHERE p.team_id = ut.team_id AND p.project_id = #{projectId} GROUP BY ut.user_id,p.project_id ) l1
        LEFT JOIN sys_user_project l2 ON l1.user_id = l2.user_id
        AND l2.project_id = #{projectId}
        LEFT JOIN sys_user u ON u.user_id = l1.user_id
        <where>
            l2.user_id IS NULL AND u.del_flag = '0'
            <if test="sysUser.params != null and sysUser.params.search != null  and sysUser.params.search != ''">
                AND (
                    u.nick_name like concat('%', #{sysUser.params.search}, '%') OR
                    u.phonenumber like concat('%', #{sysUser.params.search}, '%') OR
                    u.email like concat('%', #{sysUser.params.search}, '%')
                )
            </if>
            <if test="sysUser.roleId != null and sysUser.roleId != ''">
                AND #{sysUser.roleId} IN (select role_id from sys_user_project_role where user_project_id=up.user_project_id)
            </if>
        </where>
    </select>

    <select id="selectSysUserListByProjectId" resultMap="SysUserResult">
        select u.user_id, u.dept_id, u.user_name, u.nick_name, u.email, u.avatar, u.phonenumber, u.password, u.sex, u.status, u.del_flag, u.login_ip, u.login_date, u.create_by, u.create_time, u.remark,
            upr.role_id
        from sys_user u
        left join sys_user_project up on u.user_id = up.user_id
        left join sys_user_project_role upr on up.user_project_id = upr.user_project_id
        <where>
            up.project_id=#{projectId} and u.del_flag = '0'
            <if test="sysUser.params != null and sysUser.params.search != null  and sysUser.params.search != ''">
                AND (
                u.nick_name like concat('%', #{sysUser.params.search}, '%') OR
                u.phonenumber like concat('%', #{sysUser.params.search}, '%') OR
                u.email like concat('%', #{sysUser.params.search}, '%')
                )
            </if>
            <if test="sysUser.roleId != null and sysUser.roleId != ''">
                AND #{sysUser.roleId} IN (select role_id from sys_user_project_role where user_project_id=up.user_project_id)
            </if>
        </where>
    </select>

    <select id="selectSysUserProjectByUserProjectId" parameterType="Long" resultMap="SysUserProjectResult">
        <include refid="selectSysUserProjectVo"/>
        where user_project_id = #{userProjectId}
    </select>
        
    <insert id="insertSysUserProject" parameterType="SysUserProject" useGeneratedKeys="true" keyProperty="userProjectId">
        insert into sys_user_project
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="projectId != null">project_id,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="projectLock != null">project_lock,</if>
            <if test="collect != null">collect,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="projectId != null">#{projectId},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="projectLock != null">#{projectLock},</if>
            <if test="collect != null">#{collect},</if>
         </trim>
    </insert>

    <update id="updateSysUserProject" parameterType="SysUserProject">
        update sys_user_project
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">user_id = #{userId},</if>
            <if test="projectId != null">project_id = #{projectId},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="projectLock != null">project_lock = #{projectLock},</if>
            <if test="collect != null">collect = #{collect},</if>
        </trim>
        where user_project_id = #{userProjectId}
    </update>

    <update id="updateSysUserProjectByUserIdAndProjectId" parameterType="SysUserProject">
        update sys_user_project
        <trim prefix="SET" suffixOverrides=",">
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="projectLock != null">project_lock = #{projectLock},</if>
            <if test="collect != null">collect = #{collect},</if>
        </trim>
        <where>
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="projectId != null "> and project_id = #{projectId}</if>
        </where>
    </update>

    <delete id="deleteSysUserProjectByUserProjectId" parameterType="Long">
        delete from sys_user_project where user_project_id = #{userProjectId}
    </delete>

    <delete id="deleteSysUserProjectByUserProjectIds" parameterType="String">
        delete from sys_user_project where user_project_id in 
        <foreach item="userProjectId" collection="array" open="(" separator="," close=")">
            #{userProjectId}
        </foreach>
    </delete>
</mapper>