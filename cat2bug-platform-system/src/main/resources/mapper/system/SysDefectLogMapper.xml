<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cat2bug.system.mapper.SysDefectLogMapper">
    
    <resultMap type="SysDefectLog" id="SysDefectLogResult">
        <result property="defectLogId"    column="defect_log_id"    />
        <result property="defectLogDescribe"    column="defect_log_describe"    />
        <result property="createBy"    column="create_by"    />
        <result property="createByName"    column="create_by_name"    />
        <result property="createTime"    column="create_time"    />
        <result property="defectLogType"    column="defect_log_type"   typeHandler="com.cat2bug.system.domain.handle.SysDefectLogStateEnumTypeHandle"  />
        <result property="defectLogTypeName"    column="defect_log_type_name"   typeHandler="com.cat2bug.system.domain.handle.SysDefectLogStateEnumTypeHandle"  />
        <result property="receiveBy"    column="receive_by"   typeHandler="com.cat2bug.system.domain.handle.LongArrayTypeHandler"   />
        <result property="receiveByList"    column="receive_by_list"   typeHandler="com.cat2bug.system.domain.handle.SysUserArrayTypeHandler"   />
        <result property="annexUrls"    column="annex_urls"    />
        <result property="defectId"    column="defect_id"    />
    </resultMap>

    <sql id="selectSysDefectLogVo">
        SELECT
            dl.defect_log_id,
            dl.defect_log_describe,
            dl.create_by,
            u1.nick_name AS create_by_name,
            dl.create_time,
            dl.defect_log_type,
            dl.receive_by,
            un.user_infos AS receive_by_list,
            dl.annex_urls,
            dl.defect_id
        FROM
            sys_defect_log dl
                LEFT JOIN sys_user u1 ON u1.user_id=dl.create_by
                LEFT JOIN (
                SELECT
                    dl1.defect_log_id,
                    JSON_ARRAYAGG( JSON_OBJECT( 'userId', u.user_id, 'nickName', u.nick_name, 'userName', u.user_name ) ) AS user_infos
                FROM
                    sys_defect_log dl1
                        LEFT JOIN sys_user u ON JSON_CONTAINS(
                            dl1.receive_by,
                            CAST( u.user_id AS JSON ))
                WHERE
                    JSON_CONTAINS(
                            dl1.receive_by,
                            CAST( u.user_id AS JSON ))
                GROUP BY
                    dl1.defect_log_id
            ) un ON un.defect_log_id = dl.defect_log_id
    </sql>

    <select id="selectSysDefectLogList" parameterType="SysDefectLog" resultMap="SysDefectLogResult">
        <include refid="selectSysDefectLogVo"/>
        <where>  
            <if test="defectLogType != null "> and dl.defect_log_type = #{defectLogType}</if>
            <if test="receiveBy != null  and receiveBy != ''"> and dl.receive_by = #{receiveBy}</if>
            <if test="defectId != null "> and dl.defect_id = #{defectId}</if>
        </where>
        ORDER BY dl.create_time DESC
    </select>
    
    <select id="selectSysDefectLogByDefectLogId" parameterType="Long" resultMap="SysDefectLogResult">
        <include refid="selectSysDefectLogVo"/>
        where dl.defect_log_id = #{defectLogId}
    </select>
        
    <insert id="insertSysDefectLog" parameterType="SysDefectLog">
        insert into sys_defect_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="defectLogId != null">defect_log_id,</if>
            <if test="defectLogDescribe != null">defect_log_describe,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="defectLogType != null">defect_log_type,</if>
            <if test="receiveBy != null">receive_by,</if>
            <if test="annexUrls != null">annex_urls,</if>
            <if test="defectId != null">defect_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="defectLogId != null">#{defectLogId},</if>
            <if test="defectLogDescribe != null">#{defectLogDescribe},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="defectLogType != null">#{defectLogType, typeHandler=com.cat2bug.system.domain.handle.SysDefectLogStateEnumTypeHandle},</if>
            <if test="receiveBy != null">#{receiveBy, typeHandler=com.cat2bug.system.domain.handle.LongArrayTypeHandler },</if>
            <if test="annexUrls != null">#{annexUrls},</if>
            <if test="defectId != null">#{defectId},</if>
         </trim>
    </insert>

    <update id="updateSysDefectLog" parameterType="SysDefectLog">
        update sys_defect_log
        <trim prefix="SET" suffixOverrides=",">
            <if test="defectLogDescribe != null">defect_log_describe = #{defectLogDescribe},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="defectLogType != null">defect_log_type = #{defectLogType, typeHandler=com.cat2bug.system.domain.handle.SysDefectLogStateEnumTypeHandle},</if>
            <if test="receiveBy != null">receive_by = #{receiveBy, typeHandler=com.cat2bug.system.domain.handle.LongArrayTypeHandler},</if>
            <if test="annexUrls != null">annex_urls = #{annexUrls},</if>
            <if test="defectId != null">defect_id = #{defectId},</if>
        </trim>
        where defect_log_id = #{defectLogId}
    </update>

    <delete id="deleteSysDefectLogByDefectLogId" parameterType="Long">
        delete from sys_defect_log where defect_log_id = #{defectLogId}
    </delete>

    <delete id="deleteSysDefectLogByDefectLogIds" parameterType="String">
        delete from sys_defect_log where defect_log_id in 
        <foreach item="defectLogId" collection="array" open="(" separator="," close=")">
            #{defectLogId}
        </foreach>
    </delete>
</mapper>